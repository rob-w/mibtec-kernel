/*
 * MIS www.mistec.de SO-DIMM System on Module with TI am437x
 * Copyright (C) 2015 - http://www.mistec.de Robert Woerle
 * 
 * Copied from arch/arm/boot/dts/am437x-gp-evm.dts which has
 * Copyright (C) 2013 Texas Instruments Incorporated - http://www.ti.com/
 * 
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 */

/* AM437x SOM Mistec */

#include "am4372.dtsi"
#include <dt-bindings/pinctrl/am43xx.h>
#include <dt-bindings/pwm/pwm.h>
#include <dt-bindings/interrupt-controller/irq.h>

/ {
	compatible = "ti,am4372","ti,am43";

	evm_v3_3d: fixedregulator-v3_3d {
		compatible = "regulator-fixed";
		regulator-name = "evm_v3_3d";
		regulator-min-microvolt = <3300000>;
		regulator-max-microvolt = <3300000>;
		enable-active-high;
	};

	vtt_fixed: fixedregulator-vtt {
		compatible = "regulator-fixed";
		regulator-name = "vtt_fixed";
		regulator-min-microvolt = <1500000>;
		regulator-max-microvolt = <1500000>;
		regulator-always-on;
		regulator-boot-on;
		enable-active-high;
		gpio = <&gpio5 7 GPIO_ACTIVE_HIGH>;
	};

	leds {
		compatible = "gpio-leds";
		heartbeat {
			label = "misdimm_usr0";
			gpios = <&gpio4 8 GPIO_ACTIVE_HIGH>;
			linux,default-trigger = "heartbeat";
		};
	};
};

&am43xx_pinmux {
	pinctrl-names = "default", "sleep";
	pinctrl-0 = <&ddr3_vtt_toggle_default &debugss_pins &unused_pins>;

	ddr3_vtt_toggle_default: ddr_vtt_toggle_default {
		pinctrl-single,pins = <
			0x25c (DS0_PULL_UP_DOWN_EN | PIN_OUTPUT_PULLUP | DS0_FORCE_OFF_MODE | MUX_MODE7) /* spi0_cs0.gpio5_7 */
		>;
	};

	i2c0_pins: i2c0_pins {
		pinctrl-single,pins = <
			0x188 (PIN_INPUT_PULLUP | SLEWCTRL_FAST | MUX_MODE0) /* P600_66 AB24 i2c0_sda.i2c0_sda */
			0x18c (PIN_INPUT_PULLUP | SLEWCTRL_FAST | MUX_MODE0) /* P600_64 Y22 i2c0_scl.i2c0_scl */
		>;
	};

	i2c1_pins_default: i2c1_pins_default {
		pinctrl-single,pins = <
			0x15c (PIN_INPUT_PULLUP | SLEWCTRL_FAST | MUX_MODE2) /* P600_68 T20 spi0_cs0.i2c1_scl */
			0x158 (PIN_INPUT_PULLUP | SLEWCTRL_FAST | MUX_MODE2) /* P600_70 T21 spi0_d1.i2c1_sda  */
		>;
	};

	i2c1_pins_sleep: i2c1_pins_sleep {
		pinctrl-single,pins = <
			0x15c (PIN_INPUT_PULLUP | MUX_MODE7) /* P600_68 T20 spi0_cs0.gpio0_5 */
			0x158 (PIN_INPUT_PULLUP | MUX_MODE7) /* P600_70 T21 spi0_d1.gpio0_4 */
		>;
	};

	mmc1_pins: pinmux_mmc1_pins {
		pinctrl-single,pins = <
			0x100 (PIN_INPUT_PULLUP | MUX_MODE0) /* mmc0_clk.mmc0_clk */
			0x104 (PIN_INPUT_PULLUP | MUX_MODE0) /* mmc0_cmd.mmc0_cmd */
			0x0f0 (PIN_INPUT_PULLUP | MUX_MODE0) /* mmc0_dat0.mmc0_dat0 */
			0x0f4 (PIN_INPUT_PULLUP | MUX_MODE0) /* mmc0_dat1.mmc0_dat1 */
			0x0f8 (PIN_INPUT_PULLUP | MUX_MODE0) /* mmc0_dat2.mmc0_dat2 */
			0x0fc (PIN_INPUT_PULLUP | MUX_MODE0) /* mmc0_dat3.mmc0_dat3 */
			0x160 (PIN_INPUT_PULLDOWN | MUX_MODE7) /* spi0_cs1.mmc0_sdcd HACK to card detec both */
		>;
	};

	mmc1_sleep_pins: pinmux_mmc1_sleep_pins {
		pinctrl-single,pins = <
			0x100 (PIN_INPUT_PULLDOWN | MUX_MODE7)
			0x104 (PIN_INPUT | PULL_DISABLE | MUX_MODE7)
			0x0f0 (PIN_INPUT | PULL_DISABLE | MUX_MODE7)
			0x0f4 (PIN_INPUT | PULL_DISABLE | MUX_MODE7)
			0x0f8 (PIN_INPUT | PULL_DISABLE | MUX_MODE7)
			0x0fc (PIN_INPUT | PULL_DISABLE | MUX_MODE7)
			
		>;
	};

	emmc_pins_default: emmc_pins_default {
		pinctrl-single,pins = <
			0x020 (PIN_INPUT_PULLUP | MUX_MODE2) /* gpmc_ad8.mmc1_dat0 */
			0x024 (PIN_INPUT_PULLUP | MUX_MODE2) /* gpmc_ad9.mmc1_dat1 */
			0x028 (PIN_INPUT_PULLUP | MUX_MODE2) /* gpmc_ad10.mmc1_dat2 */
			0x02c (PIN_INPUT_PULLUP | MUX_MODE2) /* gpmc_ad11.mmc1_dat3 */
			0x030 (PIN_INPUT_PULLUP | MUX_MODE2) /* gpmc_ad12.mmc1_dat4 */
			0x034 (PIN_INPUT_PULLUP | MUX_MODE2) /* gpmc_ad13.mmc1_dat5 */
			0x038 (PIN_INPUT_PULLUP | MUX_MODE2) /* gpmc_ad14.mmc1_dat6 */
			0x03c (PIN_INPUT_PULLUP | MUX_MODE2) /* gpmc_ad15.mmc1_dat7 */
			0x080 (PIN_INPUT_PULLUP | MUX_MODE2) /* gpmc_csn1.mmc1_clk */
			0x084 (PIN_INPUT_PULLUP | MUX_MODE2) /* gpmc_csn2.mmc1_cmd */
		>;
	};

	emmc_pins_sleep: emmc_pins_sleep {
		pinctrl-single,pins = <
			0x020 (PIN_INPUT_PULLDOWN | MUX_MODE7) /* gpmc_ad8.gpio1_8 */
			0x024 (PIN_INPUT_PULLDOWN | MUX_MODE7) /* gpmc_ad9.gpio1_9 */
			0x028 (PIN_INPUT_PULLDOWN | MUX_MODE7) /* gpmc_ad10.gpio1_10 */
			0x02c (PIN_INPUT_PULLDOWN | MUX_MODE7) /* gpmc_ad11.gpio1_11 */
			0x030 (PIN_INPUT_PULLDOWN | MUX_MODE7) /* gpmc_ad12.gpio1_12 */
			0x034 (PIN_INPUT_PULLDOWN | MUX_MODE7) /* gpmc_ad13.gpio1_13 */
			0x038 (PIN_INPUT_PULLDOWN | MUX_MODE7) /* gpmc_ad14.gpio1_14 */
			0x03c (PIN_INPUT_PULLDOWN | MUX_MODE7) /* gpmc_ad15.gpio_15 */
			0x080 (PIN_INPUT_PULLDOWN | MUX_MODE7) /* gpmc_csn1.gpio1_30 */
			0x084 (PIN_INPUT_PULLDOWN | MUX_MODE7) /* gpmc_csn2.gpio1_31 */
		>;
	};

	debugss_pins: pinmux_debugss_pins {
		pinctrl-single,pins = <
			0x290 (PIN_INPUT_PULLDOWN)
			0x294 (PIN_INPUT_PULLDOWN)
			0x298 (PIN_INPUT_PULLDOWN)
			0x29c (PIN_INPUT_PULLDOWN)
			0x2a0 (PIN_INPUT_PULLDOWN)
			0x2a4 (PIN_INPUT_PULLDOWN)
			0x2a8 (PIN_INPUT_PULLDOWN)
		>;
	};

	unused_pins: unused_pins {
		pinctrl-single,pins = <
			0x000	(PIN_INPUT_PULLDOWN | MUX_MODE7)		/* B5   gpmc_ad0.gpio1_0 */
			0x004	(PIN_INPUT_PULLDOWN | MUX_MODE7)		/* A5   gpmc_ad1.gpio1_1 */
			0x008	(PIN_INPUT_PULLDOWN | MUX_MODE7)		/* B6   gpmc_ad2.gpio1_2 */
			0x00c	(PIN_INPUT_PULLDOWN | MUX_MODE7)		/* A6   gpmc_ad3.gpio1_3 */
			0x010	(PIN_INPUT_PULLDOWN | MUX_MODE7)		/* B7   gpmc_ad4.gpio1_4 */
			0x014	(PIN_INPUT_PULLDOWN | MUX_MODE7)		/* A7   gpmc_ad5.gpio1_5 */
			0x01c	(PIN_INPUT_PULLDOWN | MUX_MODE7)		/* B8   gpmc_ad7.gpio1_7 */
			0x078	(PIN_INPUT_PULLDOWN | MUX_MODE7)		/* A3   gpmc_be1n.gpio1_28 */
			0x088	(PIN_INPUT_PULLDOWN | MUX_MODE7)		/* B12  gpmc_csn3.gpio2_0 */
			0x08c	(PIN_INPUT_PULLDOWN | MUX_MODE7)		/* A12  gpmc_clk.gpio2_1 */
			0x094	(PIN_INPUT_PULLDOWN | MUX_MODE7)		/* E10  gpmc_oen_ren.gpio2_3 */
			0x1a8	(PIN_OUTPUT | MUX_MODE7)				/* M25  mcasp0_axr1.gpio3_20 */
			0x208	(PIN_INPUT_PULLDOWN | MUX_MODE7)		/* AE18 cam0_data0.gpio5_19 */
			0x20c	(PIN_INPUT_PULLDOWN | MUX_MODE7)		/* AB18 cam0_data1.gpio5_20 */
			0x210	(PIN_INPUT_PULLDOWN | MUX_MODE7)		/* Y18  cam0_data2.gpio4_24 */
			0x214	(PIN_INPUT_PULLDOWN | MUX_MODE7)		/* AA18 cam0_data3.gpio4_25 */
			0x21c	(PIN_INPUT_PULLDOWN | MUX_MODE7)		/* AD19 cam0_data5.gpio4_27 */
			0x244	(PIN_INPUT_PULLDOWN | MUX_MODE7)		/* F23  gpio5_11.gpio5_11 */
			0x248	(PIN_INPUT_PULLDOWN | MUX_MODE7)		/* E25  gpio5_12.gpio5_12 */
			0x24c	(PIN_INPUT_PULLDOWN | MUX_MODE7)		/* E24  gpio5_13.gpio5_13 */
			0x254	(PIN_INPUT | PULL_DISABLE | MUX_MODE7)	/* R24  spi4_d0.gpio5_5 */
			0x260	(PIN_INPUT | PULL_DISABLE | MUX_MODE7)	/* N20  spi2_sclk.gpio3_24 */
			0x268	(PIN_INPUT_PULLDOWN | MUX_MODE7)		/* P20  spi2_d1.gpio3_23 */
			0x26c	(PIN_INPUT_PULLDOWN | MUX_MODE7)		/* T23  spi2_cs0.gpio3_25 */
			0x27c	(PIN_INPUT | PULL_DISABLE)
			0x2c8	(PIN_INPUT_PULLDOWN)
			0x2d4	(PIN_INPUT_PULLDOWN)
			0x2d8	(PIN_INPUT_PULLDOWN | MUX_MODE7)
			0x2dc	(PIN_INPUT_PULLDOWN | MUX_MODE7)
			0x2e0	(PIN_INPUT_PULLDOWN | MUX_MODE7)
			0x2e4	(PIN_INPUT_PULLDOWN | MUX_MODE7)
			0x2e8	(PIN_INPUT_PULLDOWN | MUX_MODE7)
			0x2ec	(PIN_INPUT_PULLDOWN | MUX_MODE7)
			0x2f0	(PIN_INPUT_PULLDOWN | MUX_MODE7)
			0x2f4	(PIN_INPUT_PULLDOWN | MUX_MODE7)
			0x2f8	(PIN_INPUT_PULLDOWN | MUX_MODE7)
			0x2fc	(PIN_INPUT_PULLDOWN | MUX_MODE7)
			0x300	(PIN_INPUT_PULLDOWN | MUX_MODE7)
			0x304	(PIN_INPUT_PULLDOWN | MUX_MODE7)
			0x308	(PIN_INPUT_PULLDOWN | MUX_MODE7)
			0x30c	(PIN_INPUT_PULLDOWN | MUX_MODE7)
			0x310	(PIN_INPUT_PULLDOWN | MUX_MODE7)
			0x314	(PIN_INPUT_PULLDOWN | MUX_MODE7)
			0x318	(PIN_INPUT_PULLDOWN | MUX_MODE7)
		>;
	};
};

&i2c0 {
	status = "okay";
	pinctrl-names = "default";
	pinctrl-0 = <&i2c0_pins>;
	clock-frequency = <100000>;

	tps65218: tps65218@24 {
		reg = <0x24>;
		compatible = "ti,tps65218";
		interrupts = <GIC_SPI 7 IRQ_TYPE_NONE>; /* NMIn */
		interrupt-parent = <&gic>;
		interrupt-controller;
		#interrupt-cells = <2>;

		dcdc1: regulator-dcdc1 {
			compatible = "ti,tps65218-dcdc1";
			regulator-name = "vdd_core";
			regulator-min-microvolt = <912000>;
			regulator-max-microvolt = <1144000>;
			regulator-boot-on;
			regulator-always-on;
		};

		dcdc2: regulator-dcdc2 {
			compatible = "ti,tps65218-dcdc2";
			regulator-name = "vdd_mpu";
			regulator-min-microvolt = <912000>;
			regulator-max-microvolt = <1378000>;
			regulator-boot-on;
			regulator-always-on;
		};

		dcdc3: regulator-dcdc3 {
			compatible = "ti,tps65218-dcdc3";
			regulator-name = "vdcdc3";
			regulator-suspend-enable;
			regulator-min-microvolt = <1350000>;
			regulator-max-microvolt = <1350000>;
			regulator-boot-on;
			regulator-always-on;
		};

		dcdc5: regulator-dcdc5 {
			compatible = "ti,tps65218-dcdc5";
			regulator-name = "v1_0bat";
			regulator-min-microvolt = <1000000>;
			regulator-max-microvolt = <1000000>;
			regulator-boot-on;
			regulator-always-on;
		};

		dcdc6: regulator-dcdc6 {
			compatible = "ti,tps65218-dcdc6";
			regulator-name = "v1_8bat";
			regulator-min-microvolt = <1800000>;
			regulator-max-microvolt = <1800000>;
			regulator-boot-on;
			regulator-always-on;
		};

		ldo1: regulator-ldo1 {
			compatible = "ti,tps65218-ldo1";
			regulator-min-microvolt = <1800000>;
			regulator-max-microvolt = <1800000>;
			regulator-boot-on;
			regulator-always-on;
		};
	};

	eeprom@50 {
		compatible = "at,24c256";
		reg = <0x50>;
	};
};

&i2c1 {
	status = "okay";
	pinctrl-names = "default", "sleep";
	pinctrl-0 = <&i2c1_pins_default>;
	pinctrl-1 = <&i2c1_pins_sleep>;
	clock-frequency = <100000>;
};

&epwmss0 {
	status = "okay";
};

&gpio0 {
	status = "okay";
};

&gpio1 {
	status = "okay";
};

&gpio2 {
	status = "okay";
};

&gpio3 {
	status = "okay";
};

&gpio4 {
	status = "okay";
};

&gpio5 {
	status = "okay";
	ti,no-reset-on-init;
};

&mmc1 {
	status = "okay";
	vmmc-supply = <&evm_v3_3d>;
	bus-width = <4>;
	pinctrl-names = "default", "sleep";
	pinctrl-0 = <&mmc1_pins>;
	pinctrl-1 = <&mmc1_sleep_pins>;
	cd-gpios = <&gpio0 6 GPIO_ACTIVE_HIGH>;
};

/* eMMC sits on mmc2 */
&mmc2 {
	status = "okay";
	vmmc-supply = <&evm_v3_3d>;
	bus-width = <8>;
	pinctrl-names = "default", "sleep";
	pinctrl-0 = <&emmc_pins_default>;
	pinctrl-1 = <&emmc_pins_sleep>;
	ti,non-removable;
};

&gpmc {
	status = "disabled"; /* Disable eMMC when enabling GPMC/NAND */
	pinctrl-names = "default", "sleep";
};

&cpu {
	cpu0-supply = <&dcdc2>;
	ti,opp-disable-exception = <300000>;
};

&rtc {
	status = "okay";
};

&wdt {
	status = "okay";
};

&wkup_m3 {
	ti,set-io-isolation;
	ti,scale-data-fw = "am43x-evm-scale-data.bin";
};

&sgx {
	status = "okay";
};
